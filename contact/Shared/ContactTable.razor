@using Domain.Models;
@inject NavigationManager NavigationManager;
<div class="row">
    <div class="col">
        <h3>ContactTable</h3>
    </div>
    <div class="col-auto">
        <a href="/contact/add" class="btn btn-primary"> Add</a>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col">Email</th>
            <th scope="col">Phone Number</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Contact c in contact)
        {
            <tr>
                <th scope="row">@c.Id</th>
                <td>@c.FirstName</td>
                <td>@c.LastName</td>
                <td>@c.Email</td>
                <td>@c.PhoneNumber</td>
                <td>
                    <a class="btn btn-danger">delete</a>
                    <a @onclick="(e=>NavigateToEdit(c.Id))" class="btn btn-primary">edit</a>
                </td>
            </tr>
        }   
    </tbody>
</table>
@code {
    [Parameter]
    public List<Contact> contact { get; set; }
    private void NavigateToEdit(int Id)
    {
        NavigationManager.NavigateTo("/contact/edit/" + Id);
    }
}
